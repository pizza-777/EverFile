{"version":3,"file":"js/375.6584e3b7.js","mappings":"8JAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAUF,EAAIG,MAAMC,YAAY,OAAOF,EAAG,MAAM,CAACA,EAAG,WAAW,CAACG,GAAG,CAAC,MAAQL,EAAIM,OAAO,CAACN,EAAIO,GAAG,WAAW,EAClK,EACGC,EAAkB,G,8DCuBtB,MAAe,oBAAW,CAC1BC,KAAAA,YACAC,QAAAA,CACA,aACA,kCACA,SACA,KACA,KACA,SACA,oCACAC,GAAAA,EAAAA,OACAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,YACA,KACA,CAEA,kBACAC,EAAAA,IAAAA,EAAAA,SACAA,EAAAA,MACA,GAEAC,OACA,QACA,IChDyP,Q,UCOrPC,GAAY,OACd,EACAjB,EACAS,GACA,EACA,KACA,KACA,MAIF,EAAeQ,EAAiB,O","sources":["webpack://ever-file/./src/views/AudioView.vue","webpack://ever-file/src/views/AudioView.vue","webpack://ever-file/./src/views/AudioView.vue?5b7f","webpack://ever-file/./src/views/AudioView.vue?1353"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',[_c('b-button',{on:{\"click\":_vm.play}},[_vm._v(\"Play\")])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <b-button @click=\"play\">Play</b-button>\n  </div>\n</template>\n<script>\nimport Vue from 'vue'\n\nimport { downloadChunk, downloadFile, getFileInfo } from '@/api'\n\nfunction base64ToBytesArr(str) {\n  //str = str.replace(/data.*,/, '')\n\n  const abc = [...'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'] // base64 alphabet\n  let result = []\n\n  for (let i = 0; i < str.length / 4; i++) {\n    let chunk = [...str.slice(4 * i, 4 * i + 4)]\n    let bin = chunk.map((x) => abc.indexOf(x).toString(2).padStart(6, 0)).join('')\n    let bytes = bin.match(/.{1,8}/g).map((x) => +('0b' + x))\n    result.push(...bytes.slice(0, 3 - (str[4 * i + 2] == '=') - (str[4 * i + 3] == '=')))\n  }\n  return result\n}\n\nexport default Vue.extend({\n  name: 'AudioView',\n  methods: {\n    async play() {\n      const fileId = this.$route.params.fileId\n      let after = ''\n      let hasNextPage = true;\n      let base64 = ''\n      while(hasNextPage){\n       let chunk = await downloadChunk(fileId, after)\n        base64 += chunk.base64\n        after = chunk.after\n        hasNextPage = chunk.hasNextPage\n        break\n      }\n      \n      const audio = new Audio()             \n      audio.src = base64 + \"e53C==\"\n      audio.play()\n    },\n  },\n  data() {\n    return {}\n  },\n  // mounted() {\n  //   downloadChunk(this.$route.params.fileId, '').then((data) => {\n  //    console.log(data)\n  //   })\n  // },\n  //})\n})\nconst addSourceBufferWhenOpen = (mediaSource, mimeStr, mode = 'segments') => {\n  return new Promise((res, rej) => {\n    const getSourceBuffer = () => {\n      try {\n        const sourceBuffer = mediaSource.addSourceBuffer(mimeStr)\n        sourceBuffer.mode = mode\n        res(sourceBuffer)\n      } catch (e) {\n        rej(e)\n      }\n    }\n    if (mediaSource.readyState === 'open') {\n      getSourceBuffer()\n    } else {\n      mediaSource.addEventListener('sourceopen', getSourceBuffer)\n    }\n  })\n}\n\nfunction convertToFloat(base64) {\n  base64 = base64.replaceAll(/=|\\//g, '')\n  var blob = window.atob(base64), // Base64 string converted to a char array\n    fLen = blob.length / Float32Array.BYTES_PER_ELEMENT, // How many floats can be made, but be even\n    dView = new DataView(new ArrayBuffer(Float32Array.BYTES_PER_ELEMENT)), // ArrayBuffer/DataView to convert 4 bytes into 1 float.\n    fAry = new Float32Array(fLen), // Final Output at the correct size\n    p = 0 // Position\n\n  for (var j = 0; j < fLen; j++) {\n    p = j * 4\n    dView.setUint8(0, blob.charCodeAt(p))\n    dView.setUint8(1, blob.charCodeAt(p + 1))\n    dView.setUint8(2, blob.charCodeAt(p + 2))\n    dView.setUint8(3, blob.charCodeAt(p + 3))\n    fAry[j] = dView.getFloat32(0, true)\n  }\n  return fAry\n}\n</script>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./AudioView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./AudioView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AudioView.vue?vue&type=template&id=119cc418&\"\nimport script from \"./AudioView.vue?vue&type=script&lang=js&\"\nexport * from \"./AudioView.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","_setupProxy","on","play","_v","staticRenderFns","name","methods","base64","after","hasNextPage","audio","data","component"],"sourceRoot":""}